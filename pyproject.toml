[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "document-checker-tool"
version = "0.1.0"
description = "A tool for checking and validating documents"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "documentcheckertool"}]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "1.24.3"
pandas = "2.2.1"
openai = "1.12.0"
chromadb = "0.4.24"
tiktoken = "0.7.0"
typer = "0.12.0"
fastapi = "0.115.12"
uvicorn = "0.34.2"
gradio = "5.28.0"
gradio-client = "1.10.0"
python-docx = "1.1.2"
nltk = "3.9.1"
bcrypt = "4.3.0"
python-jose = "3.4.0"
passlib = "1.7.4"
pydantic = "2.11.4"
pydantic-core = "2.33.2"
typing-extensions = "4.13.2"
typing-inspection = "0.4.0"
filetype = "1.2.0"
python-multipart = "0.0.20"
httpx = "0.28.1"
safehttpx = "0.1.6"

[tool.poetry.group.dev.dependencies]
bandit = "1.8.3"
mypy = "1.15.0"
ruff = "0.11.8"
vulture = "2.14"
pytest = "8.3.5"
pytest-asyncio = "0.26.0"
pre-commit = "4.2.0"
identify = "2.6.10"
cfgv = "3.4.0"
pytest-cov = "4.1.0"

[tool.ruff]
line-length = 120
target-version = "py39"
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []
exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
    "venv",
]

[tool.ruff.isort]
known-first-party = ["documentcheckertool"]
known-third-party = ["gradio", "docx", "colorama", "nltk", "pydantic"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=documentcheckertool --cov-report=term-missing"

[tool.coverage.run]
source = ["documentcheckertool"]
omit = [
    "*/tests/*",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if False:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.vulture]
exclude = ["tests/*", "setup.py"]
min-confidence = 100 