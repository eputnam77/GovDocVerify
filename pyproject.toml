# ── Build & core metadata ─────────────────────────────────────────────────────
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name            = "documentcheckertoolsandbox"
version         = "0.1.0"
description     = "Tool for checking documents against Federal writing standards."
requires-python = ">=3.11"

dependencies = [
  "gradio>=5.31.0",          # ↩ if you really need a web UI
  "fastapi>=0.109.1",
  "starlette>=0.40.0",
  "python-docx>=0.8.11",
  "beautifulsoup4>=4.12.0",
  "pdfkit>=1.0.0",
  "nltk>=3.9.1",
  "pandas>=2.2.1",
  "numpy>=1.24.3",
  "pydantic>=2.11.4",
  "colorama>=0.4.6",
  "typing-extensions>=4.9.0",
  "filetype>=1.2.0",
  "python-multipart>=0.0.20",
  "zipp==3.19.1",
  "anyio>=4.4.0",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.5",
  "mypy>=1.10",
  "pytest>=8",
  "pytest-cov>=5",
  "hypothesis>=6",
  "bandit[toml]>=1.8.5",
  "semgrep>=1.123.0",
  "pip-audit>=2.7",
  "pre-commit>=3.7",
]
format   = ["ruff>=0.5"]
lint     = ["ruff>=0.5"]
typing   = ["mypy>=1.10"]
test     = ["pytest>=8", "pytest-cov>=5", "hypothesis>=6"]
security = ["bandit[toml]>=1.8.5", "semgrep>=1.123.0", "pip-audit>=2.7"]
qa       = ["pre-commit>=3.7"]

[[project.authors]]
name  = "Eric Putnam"
email = "contact@example.com"

# ── Package discovery ─────────────────────────────────────────────────────────
[tool.setuptools.packages.find]
include = ["documentcheckertool*"]
exclude = ["backend*", "frontend*", "tests*"]

# ── Code style / linting ──────────────────────────────────────────────────────
[tool.black]
line-length    = 100
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.ruff]
line-length    = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I"]

# ── Static typing ─────────────────────────────────────────────────────────────
[tool.mypy]
python_version            = "3.11"
packages                  = ["documentcheckertool"]
strict                    = true
warn_return_any           = true
warn_unused_configs       = true
disallow_untyped_defs     = true
disallow_incomplete_defs  = true
check_untyped_defs        = true
disallow_untyped_decorators = true
no_implicit_optional      = true
warn_redundant_casts      = true
warn_unused_ignores       = true
warn_no_return            = true
warn_unreachable          = true
ignore_missing_imports    = true
ignore_errors             = true
# Relax type checking for test modules to avoid thousands of
# missing annotation errors during the dev gate.
[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["documentcheckertool.interfaces.gradio_ui"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["app", "backend.api"]
ignore_errors = true
# Temporarily disable the Pydantic mypy plugin due to instability
# in the current environment.
#plugins                   = ["pydantic.mypy"]

# ── Security scanning ────────────────────────────────────────────────────────
[tool.bandit]
targets      = ["documentcheckertool"]
exclude_dirs = ["tests"]
skips        = ["B101"]

# Example per-plugin tuning (optional)
[tool.bandit.any_other_function_with_shell_equals_true]
no_shell = ["os.execl", "os.execle", "os.spawnl", "os.spawnv"]
shell    = ["os.system", "subprocess.Popen"]

# ── Test configuration ────────────────────────────────────────────────────────
[tool.pytest.ini_options]
testpaths     = ["tests"]
python_files  = "test_*.py"

# ── Dead-code detection (vulture) ─────────────────────────────────────────────
[tool.vulture]
exclude         = ["tests/*", "setup.py"]
min-confidence  = 100
